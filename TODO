Tests

Interval:
widening // i need a memory model abstraction to be able to do that (use of stack)

Iterator:
loops
Tests

CFG:
Probably do lazy cfg construction at some point (why did I start this project? I haven't even started the main thing and i already have 10000 things to do ahah. Knew I should have been a woodcutter)

To have any useful results:
Implement memory layout abstraction
Implement domain to manipulate integers and pointers the same way
interval domain
Reduced product of all of the above


CLEAN THE CODE IT'S HORRIBLE (truth but i also have so much to do to get it to work that it's ok for now, it is readable at least)

Memory abstraction
Interprocedural analysis

FIX:
Travis (need to do a generic cmake, the llvm link flag changes depending on the dist), good point for trying anyway lol

steps to be able to do something someday:
1) Compare semantics of llvm ir and c. The following steps are based of something applicable to C. Write the formalization of the semantic somewhere kevin lol. <- now
2) numeric abstract domain
3) cell based abstract semantics ( goes with 1), based on the numeric abstract domain. This is done to abstract pointer manipulation in general (structs, pointer etc...)
4) Finish widening of the interval domain.
5) Now you can analyse read programs with interval domain!

Should be done in less than 200 years. I'm still in awe when i look at ikos, knowing everything that has to be done to have a useful analyzer.
